from aiogram.types import Message, ReplyKeyboardRemove,  ContentType
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher import filters, FSMContext

import func
from config import register
from created_bot import dp, bot

from db_function import Database
db = Database('find_team_lite.db')

agree_change = ['–ü—Ä–∏–Ω—è—Ç—å', '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É']


# ************************************* —Å–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç **********************************
@dp.message_handler(filters.Text('–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'))
async def create_account(message: Message):
    button_1, button_2 = KeyboardButton('–ü—Ä–∏–Ω—è—Ç—å'), KeyboardButton('–ú–µ–Ω—é')
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1).add(button_2)
    await bot.send_message(message.from_user.id, '‚ùóÔ∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –º–æ—à–µ–Ω–Ω–∏–∫–∞—Ö:\n\n'
                                                 '–ù–∏–∫–æ–º—É –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ '
                                                 '(–ø–∞—Ä–æ–ª–∏ –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏ –ø—Ä–æ—á–µ–µ)', reply_markup=markup)


# ************************************* –ø—Ä–∏–Ω—è—Ç—å **********************************
@dp.message_handler(filters.Text(agree_change))
async def agree(message: Message):
    await bot.send_message(message.from_user.id, '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?‚§µ', reply_markup=ReplyKeyboardRemove())
    await register.create_account_name.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ **********************************
@dp.message_handler(state=register.create_account_name)
async def create_account_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    button_1, button_2 = KeyboardButton('–ü–ö'), KeyboardButton('–ö–æ–Ω—Å–æ–ª—å')
    button_3 = KeyboardButton('–ú–æ–±–∏–ª—å–Ω—ã–π –≥–µ–π–º–∏–Ω–≥')
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3)
    await bot.send_message(message.from_user.id, '–ù–∞ –∫–∞–∫–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —Ç—ã –∏–≥—Ä–∞–µ—à—å?', reply_markup=markup)
    await register.create_account_platform.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã **********************************
@dp.message_handler(state=register.create_account_platform)
async def create_account_platform(message: Message, state: FSMContext):
    await state.update_data(platform=message.text)

    if message.text == '–ü–ö':
        button_1, button_2 = KeyboardButton('CS:GO'), KeyboardButton('DOTA 2')
        button_3, button_4 = KeyboardButton('Valorant'), KeyboardButton('Minecraft')
        button_5, button_6 = KeyboardButton('PUBG'), KeyboardButton('Call of Duty')
        button_7 = KeyboardButton('Fortnite')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3, button_4)
        markup.add(button_5, button_6).add(button_7)
    elif message.text == '–ö–æ–Ω—Å–æ–ª—å':
        button_1, button_2 = KeyboardButton('Call of Duty'), KeyboardButton('Fortnite')
        button_3 = KeyboardButton('Minecraft')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3)
    else:
        button_1, button_2 = KeyboardButton('Minecraft'), KeyboardButton('PUBG')
        button_3 = KeyboardButton('Call of Duty')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3)

    await bot.send_message(message.from_user.id, '–í –∫–∞–∫–æ–π –∏–≥—Ä–µ —Ç—ã –±—ã —Ö–æ—Ç–µ–ª –Ω–∞–π—Ç–∏ —Ç–∏–º–º–µ–π—Ç–∞?', reply_markup=markup)
    await register.create_account_game.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–≥—Ä—ã **********************************
@dp.message_handler(state=register.create_account_game)
async def create_account_game(message: Message, state: FSMContext):
    await state.update_data(game=message.text)
    if message.text == 'CS:GO' or message.text == 'DOTA 2' or message.text == 'Valorant':
        await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∑–≤–∞–Ω–∏–µ‚§µ', reply_markup=ReplyKeyboardRemove())
        await register.create_account_rang.set()

    else:
        await bot.send_message(message.from_user.id, f'–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –≤ '
                                                     f'{message.text}‚§µ', reply_markup=ReplyKeyboardRemove())
        await register.create_account_hours.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–Ω–≥–∞ **********************************
@dp.message_handler(state=register.create_account_rang)
async def create_account_rang(message: Message, state: FSMContext):
    await state.update_data(rang=message.text)
    data = await state.get_data()
    game = data.get('game')
    await bot.send_message(message.from_user.id, f'–£–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –≤ '
                                                 f'{game}‚§µ', reply_markup=ReplyKeyboardRemove())
    await register.create_account_hours.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª-–≤–∞ —á–∞—Å–æ–≤ **********************************
@dp.message_handler(state=register.create_account_hours)
async def create_account_hours(message: Message, state: FSMContext):
    await state.update_data(hours=message.text)
    button_1, button_2 = KeyboardButton('–ú—É–∂—Å–∫–æ–π'), KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π')
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2)
    await bot.send_message(message.from_user.id, '–û—Ç–ª–∏—á–Ω–æ!ü§©\n\n'
                                                 'üìÉ –î–∞–≤–∞–π –Ω–∞–ø–æ–ª–Ω–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, —á—Ç–æ–±—ã –±—ã–ª–æ –ø—Ä–æ—â–µ –Ω–∞–π—Ç–∏ '
                                                 '—Ç–µ–±–µ —Ç–∏–º–º–µ–π—Ç–∞\n\n'
                                                 '–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª‚§µ', reply_markup=markup)
    await register.create_account_gender.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–∞ **********************************
@dp.message_handler(state=register.create_account_gender)
async def create_account_gender(message: Message, state: FSMContext):
    await state.update_data(gender=message.text)
    await bot.send_message(message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?', reply_markup=ReplyKeyboardRemove())
    await register.create_account_age.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ **********************************
@dp.message_handler(state=register.create_account_age)
async def create_account_age(message: Message, state: FSMContext):
    if message.text.isdigit():
        await state.update_data(age=message.text)
        button_1, button_2 = KeyboardButton('–ü–∞—Ä–Ω—è'), KeyboardButton('–î–µ–≤—É—à–∫—É')
        button_3 = KeyboardButton('–ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3)
        await bot.send_message(message.from_user.id, '–ö–æ–≥–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –Ω–∞–π—Ç–∏ —Å–µ–±–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–∏–º–º–µ–π—Ç–∞?',
                               reply_markup=markup)
        await register.create_account_find_team.set()

    else:
        await bot.send_message(message.from_user.id, '‚ùóÔ∏è –í–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º')


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–≥–æ —Ö–æ—á–µ—Ç –Ω–∞–π—Ç–∏ **********************************
@dp.message_handler(state=register.create_account_find_team)
async def create_account_find_team(message: Message, state: FSMContext):
    await state.update_data(find_team=message.text)
    button = KeyboardButton('–õ—é–±–æ–π –≤–æ–∑—Ä–∞—Å—Ç')
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button)
    await bot.send_message(message.from_user.id, '–¢–∏–º–º–µ–π—Ç –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\n'
                                                 '–£–∫–∞–∂–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—ã —á–µ—Ä–µ–∑ —Ç–∏—Ä–µ (–ø—Ä–∏–º–µ—Ä: 15-20)', reply_markup=markup)
    await register.create_account_ege_team.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞, –∫–æ–≥–æ —Ö–æ—á–µ—Ç –Ω–∞–π—Ç–∏ **********************************
@dp.message_handler(state=register.create_account_ege_team)
async def create_account_ege_team(message: Message, state: FSMContext):
    if message.text == '–õ—é–±–æ–π –≤–æ–∑—Ä–∞—Å—Ç' or ('-' in message.text and len(message.text) <= 5 and \
            message.text.split('-')[0].isdigit() and message.text.split('-')[1].isdigit()):
        await state.update_data(age_team=message.text)
        await bot.send_message(message.from_user.id, '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ —á—Ç–æ-–Ω–∏–±—É–¥—å‚§µ', reply_markup=ReplyKeyboardRemove())
        await register.create_account_about.set()

    else:
        await bot.send_message(message.from_user.id, '‚ùóÔ∏è –í–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞-–≤–µ—Ä—Ö–Ω—è—è '
                                                     '–≥—Ä–∞–Ω–∏—Ü–∞, 15-20), –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤')


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ **********************************
@dp.message_handler(state=register.create_account_about)
async def create_account_about(message: Message, state: FSMContext):
    await state.update_data(about=message.text)
    await bot.send_message(message.from_user.id, '–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞ –∞–≤–∞—Ç–∞—Äü§©')
    await register.create_account_photo.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ **********************************
@dp.message_handler(state=register.create_account_photo, content_types=ContentType.PHOTO)
async def create_account_photo(message: Message, state: FSMContext):
    photo_id = message.photo[-1].file_id
    await state.update_data(photo_id=photo_id)

    data = await state.get_data()
    name = data.get('name')
    game = data.get('game')
    rang = data.get('rang')
    platform = data.get('platform')
    hours = data.get('hours')
    gender = data.get('gender')
    age = data.get('age')
    find_team = data.get('find_team')
    age_team = data.get('age_team')
    about = data.get('about')

    mess = await func.gen_mess_by_control(name, game, rang, platform, hours, gender, age, find_team.lower(),
                                          age_team, about)

    button_1, button_2 = KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'), KeyboardButton('–í–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏')
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1).add(button_2)

    try:
        await bot.send_photo(message.from_user.id, photo_id, caption=mess, reply_markup=markup)
    except Exception as e:
        await bot.send_photo(message.from_user.id, photo_id, '–ê–≤–∞—Ç–∞—Ä:')
        await bot.send_message(message.from_user.id, mess, reply_markup=markup)

    await register.create_account_finish.set()


# ********************************** –æ–∫–æ–Ω—á–∞–Ω–∏–µ –≤–µ—Ç–∫–∏  **********************************
@dp.message_handler(state=register.create_account_finish)
async def create_account_finish(message: Message, state: FSMContext):
    if message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        data = await state.get_data()
        name = data.get('name')
        game = data.get('game')
        rang = data.get('rang')
        platform = data.get('platform')
        hours = data.get('hours')
        gender = data.get('gender')
        age = data.get('age')
        find_team = data.get('find_team')
        age_team = data.get('age_team')
        about = data.get('about')
        photo_id = data.get('photo_id')

        if not await db.exists_user_id(message.from_user.id):
            await db.add_user_id(message.from_user.id)

        await db.add_name(name, message.from_user.id)
        await db.add_game(game, message.from_user.id)
        await db.add_rang(rang, message.from_user.id)
        await db.add_platform(platform, message.from_user.id)
        await db.add_hours(hours, message.from_user.id)
        await db.add_gender(gender, message.from_user.id)
        await db.add_age(age, message.from_user.id)
        await db.add_find_team(find_team, message.from_user.id)
        await db.add_age_team(age_team, message.from_user.id)
        await db.add_about(about, message.from_user.id)
        await db.add_photo_id(photo_id, message.from_user.id)

        mess = 'ü•≥ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n\n' \
               'ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∏—Å–∫–∞—Ç—å —Ç–∏–º–º–µ–π—Ç–æ–≤‚§µ'

        button_1 = KeyboardButton('–ù–∞–π—Ç–∏ —Ç–∏–º–º–µ–π—Ç–∞')
        button_2 = KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1).add(button_2)
        await bot.send_message(message.from_user.id, mess, reply_markup=markup)
        await state.finish()

    else:
        data = await state.get_data()
        game = data.get('game')
        button_1, button_2 = KeyboardButton('–ò–º—è'), KeyboardButton('–ü–æ–ª')
        button_3, button_4 = KeyboardButton('–ò–≥—Ä–∞'), KeyboardButton('–†–∞–Ω–≥')
        button_5 = KeyboardButton('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤')
        button_6, button_7 = KeyboardButton('–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞'), KeyboardButton('–û–±–æ –º–Ω–µ')
        button_8, button_9 = KeyboardButton('–ò—â—É —Ç–∏–º–º–µ–π—Ç–∞'), KeyboardButton('–í–æ–∑—Ä–∞—Å—Ç —Ç–∏–º–º–µ–π—Ç–∞')

        if game == 'CS:GO' or game == 'DOTA 2' or game == 'Valorant':
            markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3, button_6)
            markup.add(button_5).add(button_7, button_8).add(button_9)
        else:
            markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3, button_4)
            markup.add(button_5).add(button_6, button_7).add(button_8, button_9)
        await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª, –≥–¥–µ –Ω—É–∂–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è‚§µ', reply_markup=markup)
        await register.create_account_change_type.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π **********************************
@dp.message_handler(state=register.create_account_change_type)
async def create_account_change_type(message: Message, state: FSMContext):
    await state.update_data(change_type=message.text)

    if message.text == '–ò–º—è':
        await bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–º—è‚§µ', reply_markup=ReplyKeyboardRemove())

    elif message.text == '–ü–æ–ª':
        button_1, button_2 = KeyboardButton('–ú—É–∂—Å–∫–æ–π'), KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2)
        await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ‚§µ', reply_markup=markup)

    elif message.text == '–ò–≥—Ä–∞':
        button_1, button_2 = KeyboardButton('CS:GO'), KeyboardButton('DOTA 2')
        button_3 = KeyboardButton('Minecraft')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3)
        await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ‚§µ', reply_markup=markup)

    elif message.text == '–†–∞–Ω–≥':
        data = await state.get_data()
        game = data.get('game')
        if game == 'CS:GO':
            await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∑–≤–∞–Ω–∏–µ‚§µ', reply_markup=ReplyKeyboardRemove())
        else:
            await bot.send_message(message.from_user.id, '–£–∫–∞–∂–∏ —Å–≤–æ–π —Ä–∞–Ω–≥‚§µ', reply_markup=ReplyKeyboardRemove())

    elif message.text == '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞':
        button_1, button_2 = KeyboardButton('–ü–ö'), KeyboardButton('–ö–æ–Ω—Å–æ–ª—å')
        button_3 = KeyboardButton('–ú–æ–±–∏–ª—å–Ω—ã–π –≥–µ–π–º–∏–Ω–≥')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3)
        await bot.send_message(message.from_user.id, '–ù–∞ –∫–∞–∫–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —Ç—ã –∏–≥—Ä–∞–µ—à—å?', reply_markup=markup)

    elif message.text == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤':
        data = await state.get_data()
        game = data.get('game')
        await bot.send_message(message.from_user.id, f'–ö–∞–∫–æ–µ —É —Ç–µ–±—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ '
                                                     f'–≤ {game}?', reply_markup=ReplyKeyboardRemove())

    elif message.text == '–û–±–æ –º–Ω–µ':
        await bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ‚§µ',
                                                     reply_markup=ReplyKeyboardRemove)

    elif message.text == '–ò—â—É —Ç–∏–º–º–µ–π—Ç–∞':
        button_1, button_2 = KeyboardButton('–ü–∞—Ä–Ω—è'), KeyboardButton('–î–µ–≤—É—à–∫—É')
        button_3 = KeyboardButton('–ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1, button_2).add(button_3)
        await bot.send_message(message.from_user.id, '–ö–æ–≥–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–µ–±–µ –Ω–∞–π—Ç–∏ –≤ –∫–∞—á–µ—Å—Ç–µ —Ç–∏–º–º–µ–π—Ç–∞?',
                               reply_markup=markup)

    elif message.text == '–í–æ–∑—Ä–∞—Å—Ç —Ç–∏–º–º–µ–π—Ç–∞':
        button = KeyboardButton('–õ—é–±–æ–π –≤–æ–∑—Ä–∞—Å—Ç')
        markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button)
        await bot.send_message(message.from_user.id, '–¢–∏–º–º–µ–π—Ç –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\n'
                                                     '–£–∫–∞–∂–∏—Ç–µ –≥—Ä–∞–Ω–∏—Ü—ã —á–µ—Ä–µ–∑ —Ç–∏—Ä–µ (–ø—Ä–∏–º–µ—Ä: 15-20)', reply_markup=markup)
    await register.create_account_change_text.set()


# ********************************** –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π **********************************
@dp.message_handler(state=register.create_account_change_text)
async def create_account_change_text(message: Message, state: FSMContext):
    data = await state.get_data()
    change_type = data.get('change_type')

    name = data.get('name')
    game = data.get('game')
    rang = data.get('rang')
    platform = data.get('platform')
    hours = data.get('hours')
    gender = data.get('gender')
    age = data.get('age')
    find_team = data.get('find_team')
    age_team = data.get('age_team')
    about = data.get('about')
    photo_id = data.get('photo_id')

    if change_type == '–ò–º—è':
        name = message.text
        await state.update_data(name=name)

    elif change_type == '–ü–æ–ª':
        gender = message.text
        await state.update_data(gender=gender)

    elif change_type == '–ò–≥—Ä–∞':
        game = message.text
        await state.update_data(game=game)

    elif change_type == '–†–∞–Ω–≥':
        rang = message.text
        await state.update_data(rang=rang)

    elif change_type == '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞':
        platform = message.text
        await state.update_data(platform=platform)

    elif change_type == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤':
        hours = message.text
        await state.update_data(hours=hours)

    elif change_type == '–ò—â—É —Ç–∏–º–º–µ–π—Ç–∞':
        find_team = message.text
        await state.update_data(find_team=find_team)

    elif change_type == '–û–±–æ –º–Ω–µ':
        about = message.text
        await state.update_data(about=about)

    elif change_type == '–í–æ–∑—Ä–∞—Å—Ç —Ç–∏–º–º–µ–π—Ç–∞':
        age_team = message.text
        await state.update_data(age_team=age_team)

    mess = await func.gen_mess_by_control(name, game, rang, platform, hours, gender, age, find_team.lower(), age_team, about)

    button_1, button_2 = KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'), KeyboardButton('–í–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏')
    markup = ReplyKeyboardMarkup(resize_keyboard=True).add(button_1).add(button_2)

    try:
        await bot.send_photo(message.from_user.id, photo_id, caption=mess, reply_markup=markup)
    except Exception as e:
        await bot.send_photo(message.from_user.id, photo_id, '–ê–≤–∞—Ç–∞—Ä:')
        await bot.send_message(message.from_user.id, mess, reply_markup=markup)

    await register.create_account_finish.set()











